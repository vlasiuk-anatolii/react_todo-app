{"version":3,"sources":["components/TodoApp.jsx","components/TodoList.jsx","components/TodosFilter.jsx","App.jsx","index.js"],"names":["TodoApp","currentListToDo","setCurrentListToDo","useState","inputValue","setInputValue","hendlerForm","objNewTodo","title","id","Date","isCompleated","useEffect","keyDownHandler","event","key","preventDefault","document","addEventListener","removeEventListener","onSubmit","type","className","placeholder","value","onChange","target","TodoList","all","active","complited","togglerTodo","setTogglerTodo","isedit","setIsEdit","tempTitle","setTempTitle","currentList","filter","item","forEach","element","map","classnames","completed","editing","checked","onDoubleClick","onClick","index","i","splice","deleteTodo","TodosFilter","setAll","setActive","setComplited","setRemoveComplited","href","App","removeComplited","countUnCompleated","allCompleted","togglerAll","htmlFor","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.62cf72e7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const TodoApp = ({ currentListToDo, setCurrentListToDo }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const hendlerForm = () => {\n    const objNewTodo = {\n      title: inputValue,\n      id: +new Date(),\n      isCompleated: false,\n    };\n\n    setInputValue('');\n\n    setCurrentListToDo([...currentListToDo, objNewTodo]);\n  };\n\n  useEffect(() => {\n    const keyDownHandler = (event) => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        hendlerForm();\n      }\n    };\n\n    document.addEventListener('keydown', keyDownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, [inputValue]);\n\n  return (\n    <>\n      <form data-cy=\"createTodo\" onSubmit={hendlerForm}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={inputValue}\n          onChange={(event) => {\n            setInputValue(event.target.value);\n          }}\n        />\n      </form>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\nexport const TodoList = ({\n  all,\n  active,\n  complited,\n  currentListToDo,\n  setCurrentListToDo,\n}) => {\n  const [togglerTodo, setTogglerTodo] = useState(false);\n  const [isedit, setIsEdit] = useState(0);\n  const [tempTitle, setTempTitle] = useState('');\n  let currentList = currentListToDo;\n\n  if (active) {\n    currentList = currentListToDo\n      .filter(item => item.isCompleated === false);\n  }\n\n  if (complited) {\n    currentList = currentListToDo\n      .filter(item => item.isCompleated === true);\n  }\n\n  const togglerIsCompleated = (id) => {\n    currentListToDo.forEach((element) => {\n      if (element.id === id) {\n        // eslint-disable-next-line no-param-reassign\n        element.isCompleated = togglerTodo;\n      }\n    });\n\n    setCurrentListToDo([...currentListToDo]);\n  };\n\n  const deleteTodo = (id) => {\n    let index;\n\n    currentListToDo.forEach((element, i) => {\n      if (element.id === id) {\n        index = i;\n      }\n    });\n\n    currentListToDo.splice(index, 1);\n\n    setCurrentListToDo([...currentListToDo]);\n  };\n\n  const editTitle = (id) => {\n    currentListToDo.forEach((element) => {\n      if (element.id === id) {\n        // eslint-disable-next-line no-param-reassign\n        element.title = tempTitle;\n      }\n    });\n\n    setCurrentListToDo([...currentListToDo]);\n  };\n\n  useEffect(() => {\n    const keyDownHandler = (event) => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        // call submit function here\n        editTitle(isedit);\n        setIsEdit(0);\n      }\n    };\n\n    document.addEventListener('keydown', keyDownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, [tempTitle]);\n\n  return (\n    <ul className=\"todo-list\" data-cy=\"todoList\">\n      {currentList.map(item => (\n        <li\n          key={item.id}\n          className={classnames({\n            completed: item.isCompleated,\n            editing: isedit === item.id,\n          })}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              checked={item.isCompleated}\n              className=\"toggle\"\n              onChange={() => {\n                setTogglerTodo(!togglerTodo);\n                togglerIsCompleated(item.id);\n              }}\n            />\n            <label\n              onDoubleClick={() => {\n                setIsEdit(item.id);\n                setTempTitle(item.title);\n              }}\n            >\n              {item.title}\n            </label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => {\n                deleteTodo(item.id);\n              }}\n            />\n          </div>\n          <input\n            type=\"text\"\n            id={item.id}\n            className=\"edit\"\n            value={tempTitle}\n            onChange={(event) => {\n              setTempTitle(event.target.value);\n            }}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nexport const TodosFilter = ({\n  all,\n  active,\n  complited,\n  setAll,\n  setActive,\n  setComplited,\n  setRemoveComplited,\n}) => (\n  <div>\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={all ? 'selected' : ''}\n          onClick={() => {\n            setAll(true);\n            setActive(false);\n            setComplited(false);\n          }}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={active ? 'selected' : ''}\n          onClick={() => {\n            setAll(false);\n            setActive(true);\n            setComplited(false);\n          }}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={complited ? 'selected' : ''}\n          onClick={() => {\n            setAll(false);\n            setActive(false);\n            setComplited(true);\n          }}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => {\n        setRemoveComplited(true);\n      }}\n    >\n      Clear completed\n    </button>\n  </div>\n);\n","import React, { useState } from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nfunction App() {\n  const [currentListToDo, setCurrentListToDo] = useState([]);\n  const [all, setAll] = useState(false);\n  const [active, setActive] = useState(false);\n  const [complited, setComplited] = useState(false);\n  const [removeComplited, setRemoveComplited] = useState(false);\n\n  const countUnCompleated = currentListToDo\n    .filter(item => item.isCompleated === false);\n\n  if (removeComplited) {\n    setCurrentListToDo([...countUnCompleated]);\n    setRemoveComplited(false);\n  }\n\n  const togglerAll = () => {\n    const allCompleted = currentListToDo\n      // eslint-disable-next-line no-return-assign, no-param-reassign\n      .map(item => (\n        { ...item,\n          isCompleated: !(item.isCompleated) }));\n\n    setCurrentListToDo(allCompleted);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp\n          setCurrentListToDo={setCurrentListToDo}\n          currentListToDo={currentListToDo}\n        />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={() => {\n            togglerAll();\n          }}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          all={all}\n          active={active}\n          complited={complited}\n          currentListToDo={currentListToDo}\n          setCurrentListToDo={setCurrentListToDo}\n        />\n      </section>\n\n      <footer className=\"footer\">\n        <span data-cy=\"todosCounter\" className=\"todo-count\">\n          {`${countUnCompleated.length} items left`}\n        </span>\n\n        <TodosFilter\n          all={all}\n          active={active}\n          complited={complited}\n          setAll={setAll}\n          setActive={setActive}\n          setComplited={setComplited}\n          setRemoveComplited={setRemoveComplited}\n        />\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}